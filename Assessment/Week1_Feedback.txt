Starting weekly assessment for Yuchen, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 40.39 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: Week6, Week1, Week7, Assessment, HPC, ThesisProject, Week5, Week2, Week4, .git, Week3, MiniProject

Found the following files in parent directory: README.txt, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:
**********************************************************************
*~ 
*.tmp
*.Rhistory**********************************************************************

Found README in parent directory, named: README.txt

Printing contents of README.txt:
**********************************************************************
CMEE Coursework Repository
Yuchen Yang ( yuchen.yang19@imperial.ac.uk ) 

Each week's work could be found under "WeekX" folder.
Every folder consists of three folders "Code", "Data", "Sandbox" and a README.txt detailing each week's scripts.
**********************************************************************

======================================================================
Looking for the weekly directories...

Found 7 weekly directories: Week1, Week2, Week3, Week4, Week5, Week6, Week7

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: Code, Data, Sandbox, Results

Found the following files: README.txt

Checking for readme file in weekly directory...

Found README in parent directory, named: README.txt

Printing contents of README.txt:
**********************************************************************
Yuchen's CMEE Coursework Repository - Week 1

This week's lecture covers Introduction, Unix, Shell scripting, Version Control with Git,Scientific documents with LATEX

Most of the contents under this week's folder is for Unix and Shell scripting lectures and practicles.

/Data folder contains 3 fasta data file which are used for scripts.
/Code data contains 12 scripts:

- Code/UnixPrac1.txt
	contains 5 scripts that can be copied and run in the terminal under the ../Code path, and they do the following:
		Count how many lines are in each file
	    Print everything starting from the second line for the E. coli genome
	    Count the sequence length of this genome
	    Count the matches of a particular sequence, "ATGC" in the genome of E. coli
	    Compute the AT/GC ratio. That is, the (A+T)/(G+C) ratio.
	data are stored under Data folder and called using relative path in the script.

- Code/boilerplate.sh
 	print out text to terminal

- Code/tabtocsv.sh
	create a new csv file based on input tab seperated file in the same directory.
	can be run with a file path input.

- Code/variables.sh
	shows how to read and assign value(s) from user's input.

- Code/MyExampleScript.sh
	shows how to print using variables.

- Code/CountLines.sh
	counts lines in a file, providing a file path is provided when runing the script.

- Code/ConcatenateTwoFiles.sh
	Merge two files to create a new file, need to run with 2 exisiting and 1 new file path.

- Code/tiff2png.sh
	covert .tiff file to .png file, need to install imagemagic first and provide file path.

- Code/csvtospace.sh
	create space seperated file based on given csv files.
	need file path to run and will save the new file in the same directory.

- Code/FirstExample.tex
	create a latex file.

- Code/FirstBiblio.bib
	create a bibliography file competable with latex.

- Code/CompileLaTeX.sh
	bash script to compile latax and bibliography into a pdf.**********************************************************************

Found following files in results directory: ...

Found 13 code files: ConcatenateTwoFiles.sh, CountLines.sh, variables.sh, CompileLaTeX.sh, tiff2png.sh, _Converted.txt, csvtospace.sh, FirstExample.tex, MyExampleScript.sh, FirstBiblio.bib, UnixPrac1.txt, tabtocsv.sh, boilerplate.sh

======================================================================
Testing script/code files...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:
**********************************************************************
#!/bin/bash

cat $1 > $3
cat $2 >> $3
echo "Merged File is"
cat $3**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 

**********************************************************************
Merged File is

**********************************************************************

Encountered error (or warning):
ConcatenateTwoFiles.sh: line 3: $3: ambiguous redirect
ConcatenateTwoFiles.sh: line 4: $3: ambiguous redirect

======================================================================
Inspecting script file CountLines.sh...

File contents are:
**********************************************************************
#!/bin/bash

NumLines=`wc -l < $1`
echo "The file $1 has $NumLines lines"
echo
**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 

**********************************************************************
The file  has  lines


**********************************************************************

Encountered error (or warning):
CountLines.sh: line 3: $1: ambiguous redirect

======================================================================
Inspecting script file variables.sh...

File contents are:
**********************************************************************
#!/bin/bash

# Shows the use of variables
MyVar='some string'
echo 'the current value of the variable is' $MyVar
echo 'Please enter a new string'
read MyVar
echo 'the current value of the variable is' $MyVar

## Reading multiple values
echo 'Enter two numbers separated by space(s)'
read a b
echo 'you entered' $a 'and' $b '. Their sum is:'
mysum=`expr $a + $b`
echo $mysum**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 

**********************************************************************
the current value of the variable is some string
Please enter a new string
the current value of the variable is
Enter two numbers separated by space(s)
you entered and . Their sum is:


**********************************************************************

Encountered error (or warning):
expr: syntax error

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:
**********************************************************************
#!/bin/bash
pdflatex $1.tex
pdflatex $1.tex
bibtex $1
pdflatex $1.tex
pdflatex $1.tex
evince $1.pdf &

## Cleanup
rm *~
rm *.aux
rm *.dvi
rm *.log
rm *.nav
rm *.out
rm *.snm
rm *.toc
**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 

**********************************************************************
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(/usr/share/texlive/texmf-dist/tex/latex/tools/.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 81 language(s) loaded.
File ignored)
*
! Emergency stop.
<*> .tex
        
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on .log.
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (pre
**********************************************************************

Encountered error (or warning):
bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.
rm: cannot remove '*~': No such file or directory
rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.dvi': No such file or directory
rm: cannot remove '*.log': No such file or directory
rm: cannot remove '*.nav': No such file or directory
rm: cannot remove '*.out': No such file or directory
rm: cannot remove '*.snm': No such file or directory
rm: cannot remove '*.toc': No such file or directory

** (evince:12508): WARNING **: Error when getting information for file '/home/mhasoba/Documents/Teaching/IC_CMEE/2019-20/Coursework/StudentRepos/YuchenYang_YY5819/Week1/Code/.pdf': No such file or directory

** (evince:12508): WARNING **: Error setting file metadata: No such file or directory

** (evince:12508): WARNING **: Error setting file metadata: No such file or directory

** (evince:12508): WARNING **: Error setting file metadata: No such file or directory

** (evince:12508): WARNING **: Error setting file metadata: No such file or directory

** (evince:12508): WARNING **: Error setting file metadata: No such file or directory

** (evince:12508): WARNING **: Error setting file metadata: No such file or directory

** (evince:12508): WARNING **: Error setting file metadata: No such file or directory

** (evince:12508): WARNING **: Error setting file metadata: No such file or directory

** (evince:12508): WARNING **: Error setting file metadata: No such file or directory

** (evince:12508): WARNING **: Error setting file metadata: No such file or directory

** (evince:12508): WARNING **: Error setting file metadata: No such file or directory

======================================================================
Inspecting script file tiff2png.sh...

File contents are:
**********************************************************************
#!/bin/bash

for f in *.tif; 
    do  
        echo "Converting $f"; 
        convert "$f"  "$(basename "$f" .tif).jpg"; 
    done
**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 

**********************************************************************
Converting *.tif

**********************************************************************

Encountered error (or warning):
convert: unable to open image `*.tif': No such file or directory @ error/blob.c/OpenBlob/2712.
convert: no images defined `*.jpg' @ error/convert.c/ConvertImageCommand/3210.

======================================================================
Inspecting script file _Converted.txt...

File contents are:
**********************************************************************
**********************************************************************

Testing _Converted.txt...

======================================================================
Inspecting script file csvtospace.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: YY5819@ic.ac.uk
# Script: tabtocsv.sh
# Description: substitute the commas in the files with spaces
#
# Saves the output into a .csv file
# Arguments: 1 -> tab delimited file
# Date: Oct 2019

# add if statement to deal with empty input
if [[ -z "$1" ]]; then
	printf '%s\n' "No input entered"
    exit 1
else
	echo "Creating a space seperated version of $1 ..."
	 # % = For a given filename, whatever it might be, keep everything intact up to the .csv at the end, and replace the .csv with following string 
	cat $1 | tr -s "," " " >> ${1%.csv}_Converted.txt 
	echo "Done!"
	exit
fi
**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 

**********************************************************************
No input entered

**********************************************************************

Code ran without errors

Time consumed = 0.00612s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:
**********************************************************************
\documentclass[12pt]{article}

\title{A Simple Document}

\author{Your Name}

\date{}

\begin{document}
  \maketitle
  
  \begin{abstract}
    This paper must be cool!
  \end{abstract}
  
  \section{Introduction}
    Blah Blah!
  
  \section{Materials \& Methods}
  One of the most famous equations is:
  \begin{equation}
    E = mc^2
  \end{equation}
  This equation was first proposed by Einstein in 1905 
  \cite{einstein1905does}.
  
  \bibliographystyle{plain}
  \bibliography{FirstBiblio}
\end{document}**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:
**********************************************************************
#!/bin/bash

msg1="Hello"
msg2=$USER
echo "$msg1 $msg2"
echo "Hello $USER"
echo
**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 

**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00353s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:
**********************************************************************
@article{einstein1905does,
  title={Does the inertia of a body depend upon its energy-content?},
  author={Einstein, A.},
  journal={Annalen der Physik},
  volume={18},
  pages={639--641},
  year={1905}
}**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:
**********************************************************************
#1  find all file with a extension "fasta" under given data directory and count the lines in them respectively(with xargs)

find ../Data/fasta -name '*.fasta' | xargs wc -l



#2 print give file but not the first line,  use -n+NUM to output starting with line NUM

cat ../Data/fasta/E.coli.fasta | tail -n +2


#3 get rid of the first line of the file and delete all non-sequence characters and then do character count and print it

cat ../Data/fasta/E.coli.fasta | tail -n +2 | tr -d '\r\n' | wc -m


#4 find all given pattern in given file and out put only the result by line, then count the line fo the result

grep -o "ATGC" ../Data/fasta/E.coli.fasta | wc -l


#5 similar to the 4, get the count of given letters and coverted to variables, and use "echo bc" to do the calculation, adding -l to keep the decimal. 

echo $(grep -o ["A","T"] ../Data/fasta/E.coli.fasta | wc -l)/$(grep -o ["G","C"] ../Data/fasta/E.coli.fasta | wc -l) | bc -l
**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: YY5819@ic.ac.uk
# Script: tabtocsv.sh
# Description: substitute the tabs in the files with commas
#
# Saves the output into a .csv file
# Arguments: 1 -> tab delimited file
# Date: Oct 2019

echo "Creating a comma delimited version of $1 ..."
cat $1 | tr -s "\t" "," >> $1.csv
echo "Done!"
exit
**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a comma delimited version of  ...
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.00713s

======================================================================
Inspecting script file boilerplate.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Yuchen Yang (YY5819@ic.ac.uk)
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguments: none
# Date: Oct 2019

echo -e "\nThis is a shell script! \n" 
# -e enables interpretation of the following backslash-escaped characters in each String

#exit
**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 

**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00485s

======================================================================
======================================================================
Finished running scripts

Ran into 5 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 100

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!